How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It easier to find a bug, because diff shows changes made in lines of the file side-by-side.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps you to track changes what you implementing in your code. May be use different approaches to solving a certain problem.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: You have a full control over commiting process choosing what to and what not to commit.
    Cons: You may forget or be lazy enough to keep commiting on needed level of detalization.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because Git aim is to keep version of whole project which can consist of multiple files.

How can you use the commands git log and git diff to view the history of files?

    Git log gives us a list or history of commits. Git diff allows to view difference between two commits.

How might using version control make you more confident to make changes that
could break something?

    Because you always have an ability to step back to working code.

Now that you have your workspace set up, what do you want to try using Git for?

    I need to learn some more about Git
